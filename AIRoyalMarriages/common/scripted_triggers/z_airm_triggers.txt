#-----------------------------------------------------------------------------------------
# Is this country eligible to receive RM proposals?
#-----------------------------------------------------------------------------------------
z_airm_country_can_receive_proposals_trigger = {
	NOT = { has_variable = marriage_proposal_ongoing }
	is_monarchy = yes
	has_land = yes
	NOR = {
		tag = REB
		tag = BAR
		tag = PIR
		has_variable = z_airm_cooldown
	}
	any_character = { z_airm_character_is_weddable_receiver_trigger = yes } # Is this character from receiver country eligible for a RM?
}

#-----------------------------------------------------------------------------------------
# Is this country eligible to send RM proposals?
#-----------------------------------------------------------------------------------------
z_airm_country_can_send_proposals_trigger = {
	#NOT = { has_variable = marriage_proposal_ongoing }
	is_ai = yes
	is_monarchy = yes
	has_land = yes
	NOR = {
		this = root
		tag = REB
		tag = BAR
		tag = PIR
		has_variable = z_airm_cooldown
	}
}

#-----------------------------------------------------------------------------------------
# Is this country eligible to receive RM proposals from sender country?
#-----------------------------------------------------------------------------------------
z_airm_country_can_receive_proposals_from_sender_trigger = {
	trigger_if = {
		limit = { is_ai = no }
		scope:actor = {
			NOT = { has_variable = z_airm_player_refused_this_country }
		}
	}
	NOR = {
		war_with = scope:actor
		has_truce_with = scope:actor
		scope:actor = { has_truce_with = root }
	}
	exists = root.culture.culture_group
	exists = scope:actor.culture.culture_group
	in_diplomatic_range = scope:actor # Someone convinced me of it
	#OR = {
	#	root.culture.culture_group = scope:actor.culture.culture_group
	#	in_diplomatic_range = scope:actor
	#}
	trigger_if = {
		limit = { scope:actor.num_of_cities > root.num_of_cities }
		scope:actor = {
			opinion = {
				target = root
				value >= 25
			}
		}
	}
	trigger_else = {
		scope:actor = {
			opinion = {
				target = root
				value >= -10
			}
		}
	}
}

#-----------------------------------------------------------------------------------------
# Is this character from sender country eligible for a RM?
#-----------------------------------------------------------------------------------------
z_airm_character_is_weddable_sender_trigger = {
	trigger_if = {
		limit = {
			root = { is_ai = no }
		}
		NOT = { has_variable = z_airm_player_refused_this_bride }
	}
	prisoner_valid_for_country_events_trigger = yes
	is_mercenary = no
	OR = {
		from_ruler_family = yes
		has_bloodline_trigger = yes
	}
	is_female = yes
	is_married = no #can_marry = yes
	age >= 10
	age <= 35
	NOT = { has_variable = betrothed_flag }
}

#-----------------------------------------------------------------------------------------
# Is this character from receiver country eligible for a RM?
#-----------------------------------------------------------------------------------------
z_airm_character_is_weddable_receiver_trigger = {
	prisoner_valid_for_country_events_trigger = yes
	is_mercenary = no
	OR = {
		is_ruler = yes
		from_ruler_family = yes
	}
	is_male = yes
	is_married = no #can_marry = yes
	age >= 10
	age <= 50
	NOT = { has_variable = betrothed_flag }
}

#-----------------------------------------------------------------------------------------
# Fix Vanilla trigger (remove a condition)
#-----------------------------------------------------------------------------------------
betrothed_trigger = {
	is_alive = yes
	prisoner = no
	# Remove this Vanilla condition, for it may break betrothals, which is not nice :(
	#OR = {
	#	is_ruler = yes
	#	is_close_relative = employer.current_ruler
	#}
	NOR = {
		employer = c:MER
		employer = c:REB
		employer = c:PIR
	}
	has_variable = betrothed_flag
}