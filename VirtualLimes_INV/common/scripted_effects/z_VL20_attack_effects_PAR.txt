# --------------------------------------------------------------------------------
# Help AI Parthia conquer Persia and Mesopotamia, otherwise it's just lost in Kazakhstan
# On monthly pulse (+ random offset): z_limes_attack_effect: any country with z_has_limes_PAR:
# --------------------------------------------------------------------------------
z_limes_attack_effect_PAR = {
	# Normal attack effect: make AI PAR attack whichever AI is in PAR's historical regions
	if = {
		limit = {
			z_limes_year >= 60
			num_of_cities >= 50
			z_limes_rules_attack_PAR = 1
			NOR = {
				z_limes_year >= 200
				capital_scope = { is_in_region = media_region }
				capital_scope = { is_in_region = mesopotamia_region }
				capital_scope = { is_in_region = persis_region }
			}
		}
		if = { limit = { z_limes_attack_trigger_default = { REGION = parthia_region } } z_limes_attack_effect_b = { REGION = parthia_region } }
		else_if = { limit = { z_limes_attack_trigger_default = { REGION = media_region } } z_limes_attack_effect_b = { REGION = media_region } }
		else_if = { limit = { z_limes_attack_trigger_default = { REGION = persis_region } } z_limes_attack_effect_b = { REGION = persis_region } }
		else_if = { limit = { z_limes_attack_trigger_default = { REGION = ariana_region } } z_limes_attack_effect_b = { REGION = ariana_region } }
		else_if = { limit = { z_limes_attack_trigger_default = { REGION = mesopotamia_region } } z_limes_attack_effect_b = { REGION = mesopotamia_region } }
		# Help AI PAR in their war, if enemy is AI SEL
		if = {
			limit = {
				# Make sure z_limes_attack_effect_b has fired
				exists = scope:z_limes_attacker_country
				exists = scope:z_limes_defender_country
				# Make sure AI PAR is at war with AI SEL
				war = yes
				any_countries_at_war_with = {
					this = scope:z_limes_defender_country
					tag = SEL
					z_limes_can_cheat = yes # Can AI SEL cheat?
				}
				z_limes_can_cheat = yes # Can AI PAR cheat?
			}
			# Give AI PAR free provinces from AI SEL at the start of the war
			scope:z_limes_defender_country = {
				while = {
					count = 2
					random_owned_province = {
						limit = {
							NOT = { this.area = scope:z_limes_defender_country.capital_scope.area }
							any_neighbor_province = { owner = root }
						}
						area = {
							every_area_province = {
								limit = {
									owner = scope:z_limes_defender_country
								}
								set_owned_by = root
							}
						}
					}
				}
			}
			# Remove AI BAC from war, if present
			if = {
				limit = {
					any_countries_at_war_with = {
						tag = BAC
						is_ai = yes
						is_subject = yes
						is_subject_of = c:SEL
						z_limes_can_cheat = yes
					}
				}
				every_current_war = {
					limit = {
						any_war_participant = { this = c:BAC }
					}
					remove_from_war = c:BAC
				}
			}
			# Buff AI PAR
			if = {
				limit = { z_limes_rules_buff_PAR = 1 }
				while = {
					limit = { stability <= 50 }
					add_stability = 5
				}
				while = {
					limit = { manpower <= 10 }
					add_manpower = 0.5
				}
				while = {
					limit = { has_war_exhaustion > 0 }
					add_war_exhaustion = -5
				}
				while = {
					limit = { treasury <= 500 }
					add_treasury = 2.5
				}
				if = {
					limit = {
						NOT = { has_country_modifier = country_improvement_mercenary_patron }
					}
					add_country_modifier = {
						name = country_improvement_mercenary_patron
						duration = 90
					}
				}
			}
			# Nerf AI SEL
			if = {
				limit = { z_limes_rules_nerf_SEL = 1 }
				scope:z_limes_defender_country = {
					while = {
						limit = { stability >= 50 }
						add_stability = -5
					}
					while = {
						limit = { manpower >= 3 }
						add_manpower = -0.5
					}
					while = {
						limit = { treasury >= 100 }
						add_treasury = -2.5
					}
				}
			}
		}
	}
}

# --------------------------------------------------------------------------------
# PAR new capital
# On Limes routine: z_limes_capital_effect: z_limes_restore_capital_effect: any country with z_has_limes_PAR:
# --------------------------------------------------------------------------------
z_limes_restore_capital_effect_PAR = {
	if = {
		limit = {
			capital_scope = {
				NOT = { is_in_region = mesopotamia_region }
			}
		}
		if = {
			limit = {
				num_of_cities >= 100
				region:mesopotamia_region = {
					any_region_province = {
						percent >= 0.7
						has_owner = yes
						owner = root
					}
					any_region_province = {
						total_population >= 15
						has_owner = yes
						owner = root
					}
				}
			}
			ordered_owned_province = {
				limit = { is_in_region = mesopotamia_region }
				order_by = total_population
				root = { set_capital = prev }
			}
			z_limes_PAR_religion_effect = yes
		}
		else_if = {
			limit = {
				capital_scope = {
					NOT = { is_in_region = media_region }
				}
				num_of_cities >= 75
				region:media_region = {
					any_region_province = {
						percent >= 0.3
						has_owner = yes
						owner = root
					}
					any_region_province = {
						total_population >= 10
						has_owner = yes
						owner = root
					}
				}
			}
			ordered_owned_province = {
				limit = { is_in_region = media_region }
				order_by = total_population
				root = { set_capital = prev }
			}
			z_limes_PAR_religion_effect = yes
		}
		else_if = {
			limit = {
				capital_scope = {
					NOT = { is_in_region = persis_region }
				}
				num_of_cities >= 75
				region:persis_region = {
					any_region_province = {
						percent >= 0.3
						has_owner = yes
						owner = root
					}
					any_region_province = {
						total_population >= 15
						has_owner = yes
						owner = root
					}
				}
			}
			ordered_owned_province = {
				limit = { is_in_region = persis_region }
				order_by = total_population
				root = { set_capital = prev }
			}
			z_limes_PAR_religion_effect = yes
		}
		else_if = {
			limit = {
				capital_scope = {
					NOT = { is_in_region = parthia_region }
				}
				num_of_cities >= 50
				region:parthia_region = {
					any_region_province = {
						percent >= 0.2
						has_owner = yes
						owner = root
					}
				}
			}
			ordered_owned_province = {
				limit = { is_in_region = parthia_region }
				order_by = total_population
				root = { set_capital = prev }
			}
		}
	}
}

# --------------------------------------------------------------------------------
# Convert PAR to Zoroastrianism
# When setting a new capital via z_limes_restore_capital_effect_PAR:
# --------------------------------------------------------------------------------
z_limes_PAR_religion_effect = {
	if = {
		limit = {
			NOT = { religion = zoroaster }
		}
		set_country_religion = zoroaster
		current_ruler = { set_character_religion = zoroaster }
	}
}