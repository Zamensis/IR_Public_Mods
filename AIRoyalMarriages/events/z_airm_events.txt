namespace = z_airm

#-----------------------------------------------------------------------------------------
# Sender country sends a betrothal proposal to receiver country
#-----------------------------------------------------------------------------------------
z_airm.1 = {
	type = country_event
	title = "z_airm.1.t"
	desc = "z_airm.1.desc"
	goto_location = scope:actor.capital_scope
	
	picture = council_country
	
	left_portrait = scope:target
	left_portrait = scope:alt_target
	right_portrait = scope:recipient
	
	immediate = {
		# Same as royal_marriage.2
		save_scope_as = receiver_country
		# Find an alternative target
		random_character = {
			limit = {
				NOT = { this = scope:target }
				z_airm_character_is_weddable_receiver_trigger = yes
			}
			weight = {
				modifier = {
					factor = 2
					z_airm_age_difference <= 10
				}
				modifier = {
					factor = 2
					has_bloodline_trigger = yes
				}
			}
			save_scope_as = alt_target
		}
		# Specificic 'this receiver for this sender' cooldown
		scope:recipient.employer = { # recipient.employer = actor
			set_variable = {
				name = z_airm_player_refused_this_country
				days = 1825 # 5 years
			}
		}
	}
	
	option = { # Accept
		name = z_airm.1.a
		scope:target = {
			if = {
				limit = { has_variable = betrothed_flag } # Should never be the case, though
				var:betrothed_flag = { remove_variable = betrothed_flag }
				remove_variable = betrothed_flag
			}
			set_variable = {
				name = betrothed_flag
				value = scope:recipient
				days = 2000 # Vanilla says 1500 but then the betrothal can time out before the day has come
			}
		}
		scope:recipient = {
			if = {
				limit = { has_ambition = scheme_seek_a_spouse }
				set_ambition = ambition_content_in_life
			}
			if = {
				limit = { has_variable = betrothed_flag } # Should never be the case, though
				var:betrothed_flag = { remove_variable = betrothed_flag }
				remove_variable = betrothed_flag
			}
			set_variable = {
				name = betrothed_flag
				value = scope:target
				days = 2000 # Vanilla says 1500 but then the betrothal can time out before the day has come
			}
		}
		scope:recipient.employer = { # recipient.employer = actor
			add_opinion = {
				modifier = opinion_royal_marriage_ci # Vanilla opinion
				target = scope:receiver_country
			}
		}
		custom_tooltip = z_airm.1.at
		ai_chance = { factor = 20 }
	}
	
	option = { # What about this character instead?
		name = z_airm.1.b
		trigger = { exists = scope:alt_target }
		scope:alt_target = {
			if = {
				limit = { has_variable = betrothed_flag } # Should never be the case, though
				var:betrothed_flag = { remove_variable = betrothed_flag }
				remove_variable = betrothed_flag
			}
			set_variable = {
				name = betrothed_flag
				value = scope:recipient
				days = 2000 # Vanilla says 1500 but then the betrothal can time out before the day has come
			}
		}
		scope:recipient = {
			if = {
				limit = { has_ambition = scheme_seek_a_spouse }
				set_ambition = ambition_content_in_life
			}
			if = {
				limit = { has_variable = betrothed_flag } # Should never be the case, though
				var:betrothed_flag = { remove_variable = betrothed_flag }
				remove_variable = betrothed_flag
			}
			set_variable = {
				name = betrothed_flag
				value = scope:alt_target
				days = 2000 # Vanilla says 1500 but then the betrothal can time out before the day has come
			}
		}
		scope:recipient.employer = { # recipient.employer = actor
			add_opinion = {
				modifier = opinion_royal_marriage_ci # Vanilla opinion
				target = scope:receiver_country
			}
		}
		custom_tooltip = z_airm.1.bt
		ai_chance = { factor = 10 }
	}
	
	option = { # Not this character
		name = z_airm.1.c
		scope:recipient.employer = {
			if = {
				limit = {
					root = { is_ai = no }
				}
				add_opinion = {
					modifier = z_opinion_refused_royal_marriage_ci # Vanilla opinion
					target = root
				}
			}
		}
		scope:recipient = {
			if = {
				limit = {
					root = { is_ai = no }
				}
				set_variable = {
					name = z_airm_player_refused_this_bride
					days = 3650
				}
			}
		}
		ai_chance = { factor = 70 }
	}
	
	option = { # Not this country
		name = z_airm.1.d
		trigger = {
			root = { is_ai = no }
		}
		scope:recipient.employer = {
			add_opinion = {
				modifier = opinion_refused_royal_marriage_ci # Vanilla opinion
				target = root
			}
		}
		# Increase specific 'this receiver for this sender' cooldown
		scope:recipient.employer = { # recipient.employer = actor
			set_variable = {
				name = z_airm_player_refused_this_country
				days = 27375 # 75 years
			}
		}
		custom_tooltip = z_airm.1.dt
		ai_chance = { factor = 0 }
	}
}